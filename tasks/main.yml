---
#- name: Set MySQL root password before installing
- debconf:
     name: 'mysql-server'
     question: 'mysql-server/root_password'
     value: '{{mysql_root_password | quote}}'
     vtype: 'password'

#- name: Confirm MySQL root password before installing
- debconf:
     name: 'mysql-server'
     question: 'mysql-server/root_password_again'
     value: '{{mysql_root_password | quote}}'
     vtype: 'password'

# Install the packages
- name: Install mysql server
  apt:
     name: '{{ item }}'
     state: present
     update-cache: yes
     cache_valid_time: 3600
  with_items:
     - mysql-server-{{ mysql_version }}
     - python-mysqldb

# set the my.cnf
#- name: Copy my.cnf
#  template:
#     src: my.cnf.j2
#     dest: /etc/mysql/my.cnf
#     owner: root
#     group: root
#     mode: 0644

- name: Copy the root credentials as .my.cnf file
  template:
      src: root.cnf.j2
      dest: ~/.my.cnf
      mode: 0600

- name: Update MySQL root password for all root accounts
  mysql_user:
      name: root
      host: "{{ item }}"
      password: "{{ mysql_root_password }}"
      state: present
  with_items:
     - "{{ ansible_hostname }}"
     - 127.0.0.1
     - ::1
     - localhost

- name: ensure anonymous users are not in the database
  mysql_user:
      name: ''
      host: "{{ item }}"
      login_user: root
      login_password: "{{ mysql_root_password }}"
      state: absent
  with_items:
      - localhost
      - "{{ ansible_hostname }}"

- name: remove the test database
  mysql_db:
      name: test
      state: absent
      login_user: root
      login_password: "{{ mysql_root_password }}"

- name: Create Databases
  mysql_db:
      name: "{{ item }}"
      state: present
      login_user: root
      login_password: "{{ mysql_root_password }}"
      collation: utf8_bin
      encoding: utf8
  with_items: "{{ mysql_databases }}"
  when: mysql_databases|lower != 'none' and mysql_databases is defined

- name: Create Users
  mysql_user:
      name: "{{ item['user']['name'] }}"
      password: "{{ item['user']['password'] }}"
      login_user: root
      login_password: "{{ mysql_root_password }}"
      priv: "{{ item['user']['privileges'] }}"
      state: present
  with_items: "{{ mysql_users }}"
  when: mysql_users|lower != 'none' and mysql_users is defined

- name: restart mysql
  service:
      name: mysql
      state: restarted
